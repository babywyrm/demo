name: Security Check Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-check:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi
          if [ -f "pyproject.toml" ]; then pip install poetry && poetry install; fi

      - name: Run Python vulnerability scan (Safety)
        run: |
          pip install safety
          safety check --full-report || true  # Prevent workflow from halting

      # Step 3: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install npm dependencies
        run: |
          if [ -f "package-lock.json" ]; then npm ci; fi
          if [ -f "yarn.lock" ]; then yarn install; fi

      - name: Run npm audit
        run: |
          if [ -f "package.json" ]; then npm audit --json > npm-audit.json || true; fi  # Prevent workflow from halting

      # Step 4: Set up Ruby environment
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '3.x'  # Use the appropriate Ruby version

      - name: Install Bundler and Audit
        run: |
          if [ -f "Gemfile" ]; then
            gem install bundler
            bundler install || true  # Prevent workflow from halting
            bundle exec bundler-audit check --update || true  # Prevent workflow from halting
          fi

      # Step 5: Check for vulnerabilities and report
      - name: Report vulnerabilities
        run: |
          echo "Checking for vulnerabilities..."
          if [ -f "npm-audit.json" ]; then
            echo "NPM Audit Results:"
            cat npm-audit.json | jq '.advisories | to_entries[] | select(.value.severity == "high" or .value.severity == "critical")' || true
          fi
          safety check --full-report || true

