name: Security Check Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  security-check:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi
          if [ -f "pyproject.toml" ]; then pip install poetry && poetry install; fi

      - name: Run Python vulnerability scan (Safety)
        run: |
          pip install safety
          safety check --full-report || true
        continue-on-error: true

      # Step 3: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16.x'

      - name: Install npm dependencies
        run: |
          if [ -f "package-lock.json" ]; then npm ci; fi
          if [ -f "yarn.lock" ]; then yarn install; fi

      - name: Run npm audit
        run: |
          if [ -f "package.json" ]; then npm audit --json > npm-audit.json || true; fi
        continue-on-error: true

      # Step 4: Set up Java
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'  # Specify the distribution for Java

      - name: Run Maven dependency check
        run: |
          if [ -f "pom.xml" ]; then mvn dependency-check:aggregate || true; fi
        continue-on-error: true

      # Step 5: Docker vulnerability scan (Trivy)
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y trivy

      - name: Run Docker image scan
        run: |
          if [ -f "Dockerfile" ]; then trivy fs . --exit-code 0 --severity HIGH,CRITICAL || true; fi
        continue-on-error: true

      # Step 6: Ruby vulnerability check
      - name: Set up Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '3.x'  # Use the appropriate Ruby version

      - name: Install Bundler and Audit
        run: |
          gem install bundler
          bundler install || true
          bundle exec bundler-audit check --update || true
        continue-on-error: true

      # Step 7: Alert on vulnerabilities (Optional)
      - name: Check for vulnerabilities
        run: |
          if [ -f "npm-audit.json" ]; then cat npm-audit.json | jq '.advisories | to_entries[] | select(.value.severity == "high" or .value.severity == "critical")' || true; fi
          safety check --full-report || true
          trivy fs . --exit-code 1 --severity HIGH,CRITICAL || true

